src=http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller
Model–view–controller
(MVC) is a software architecture pattern which separates the representation of information from the user's interaction with it. The model consists of application data, business rules, logic, and functions. A view can be any output representation of data, such as a chart or a diagram. Multiple views of the same data are possible, such as a bar chart for management and a tabular view for accountants. The controller mediates input, converting it to commands for the model or view.

Component interactions
A typical collaboration of the MVC components

In addition to dividing the application into three kinds of components, the Model–view–controller (MVC) design defines the interactions between them.

    A controller can send commands to the model to update the model's state (e.g., editing a document). It can also send commands to its associated view to change the view's presentation of the model (e.g., by scrolling through a document).
    A model notifies its associated views and controllers when there has been a change in its state. This notification allows the views to produce updated output, and the controllers to change the available set of commands. A passive implementation of MVC omits these notifications, because the application does not require them or the software platform does not support them.
    A view requests information from the model that it needs for generating an output representation to the user
