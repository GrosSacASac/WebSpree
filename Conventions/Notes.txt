Une balise doit pouvoir, par son nom, pointer vers
non relié à la langue
	{
-nom de l'élément
-sa catègorie (structure, multimédia,formulaires etc.?)
-version de html 4? 5? obsolète ?
-element vide ou pas ?(bool)
-une liste d'attributs spécifique obligatoire pour cet element(qui seront insérés direct)
-une liste d'attributs spécifique non obligatoire
	Chaque élément de cette liste doit lui même pointer vers
	non relié à la langue
		{
	-sa valeur par défaut ou sa valeur la plus courante ou une valeur d'exmple
	-ses valeurs possibles
		}

	relié à la langue
		{
	-sa traduction 
	-son aide*
		}
-à mettre dans head ou body ou est head ou est body?
	}

relié à la langue
	{
-Nom fr
-aide*
	}

aide*
	-description
	-rôle
	-alternatives
	-conseils
	-en pratique ...	-
menu_file.add_checkbutton(label='Check', variable=check, onvalue=1, offvalue=0)



class App(object):

    def __init__(self):
        self.root = tkinter.Tk()
        self.style = ttk.Style()
        available_themes = self.style.theme_names()
        random_theme = random.choice(available_themes)
        self.style.theme_use(random_theme)
        self.root.title(random_theme)

        frm = ttk.Frame(self.root)
        frm.pack(expand=True, fill='both')
    # create a Combobox with themes to choose from
        self.combo = ttk.Combobox(frm, values=available_themes)
        self.combo.pack(padx=32, pady=8)
    # make the Enter key change the style
        self.combo.bind('<Return>', self.change_style)
    # make a Button to change the style
        button = ttk.Button(frm, text='OK')
        button['command'] = self.change_style
        button.pack(pady=8)
        tree = ttk.Treeview(self.root)
        tree.pack()
        # Inserted at the root, program chooses id:
        tree.insert('', 'end', 'widgets', text='Widget Tour')
         
        # Same thing, but inserted as first child:
        tree.insert('', 0, 'gallery', text='Applications')

        # Treeview chooses the id:
        id = tree.insert('', 'end', text='Tutorial')

        # Inserted underneath an existing node:
        tree.insert('widgets', 'end', text='Canvas')
        tree.insert(id, 'end', text='Tree')

    def change_style(self, event=None):
        """set the Style to the content of the Combobox"""
        content = self.combo.get()
        try:
            self.style.theme_use(content)
        except tkinter.TclError as err:
            messagebox.showerror('Error', err)
        else:
            self.root.title(content)

style = TTK.Style()
style.theme_settings("default", {
   "TButton": {
       "configure": {"padding": 5},
       "font": "25 Arial",
       "map": {
           "background": [("active", "green2"),
                          ("!disabled", "green4")],
           "fieldbackground": [("!disabled", "green3")],
           "foreground": [("focus", "OliveDrab1"),
                          ("!disabled", "OliveDrab2")],
           
       }
   }
})